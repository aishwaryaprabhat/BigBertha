apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  destination:
    namespace: prometheus
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: kube-prometheus-stack
    helm:
      values: |-
        prometheus:
          prometheusSpec:
            ruleSelector:
              matchLabels:
                isPrometheusRule: "true"
            serviceMonitorSelector:
              matchLabels:
                isServiceMonitor: "true"
        prometheus-node-exporter:
          hostRootFsMount:
            enabled: false
        prometheusOperator:
          admissionWebhooks:
            failurePolicy: Ignore
        alertmanager:
          alertmanagerSpec:
            alertmanagerConfigSelector:
              matchLabels:
                isAlertConfig: "true"
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 42.0.3
  syncPolicy:
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bigbertha-llmchatbot
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/aishwaryaprabhat/BigBertha'
    path: llmchatbot/manifests
    targetRevision: HEAD
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: environment.HUGGINGFACEHUB_API_TOKEN
          value: didyoureallythinkiwouldputarealtokenhere
        - name: image.tag
          value: v1.5
        - name: replicas
          value: '1'
        - name: resources.memoryLimit
          value: 5Gi
        - name: resources.memoryRequest
          value: 3Gi
        - name: image.repository
          value: aishwaryaprabhat/chatbot
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: bigbertha
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argowf
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/argoproj/argo-helm'
    path: charts/argo-workflows
    targetRevision: HEAD
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: workflow.namespace
          value: argowf
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: argowf
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-events
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/argoproj/argo-events'
    path: manifests/cluster-install
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: argo-events
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true


